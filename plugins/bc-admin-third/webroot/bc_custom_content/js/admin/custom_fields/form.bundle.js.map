{"version":3,"file":"bc_custom_content/js/admin/custom_fields/form.bundle.js","mappings":"AAWS,IAAIA,IAAI,CAKbC,GAAI,yBAMJC,KAAM,WACF,IAAMC,EAASC,EAAE,gCACjB,MAAO,CACHC,SAAUC,KAAKC,MAAMJ,EAAOK,KAAK,iBACjCC,OAAQH,KAAKC,MAAMJ,EAAOK,KAAK,gBAC/BE,qBAAqB,EACrBC,eAAe,EACfC,aAAa,EACbC,cAAc,EACdC,cAAc,EACdC,oBAAoB,EACpBC,yBAAyB,EACzBC,wBAAwB,EACxBC,oBAAoB,EACpBC,iBAAiB,EACjBC,iBAAiB,EACjBC,sBAAsB,EACtBC,wBAAwB,EACxBC,oBAAoB,EACpBC,YAAa,GACbC,oBAAqB,GACrBC,YAAa,GACbC,aAAc,GAEtB,EAKAC,QAAS,WACLC,KAAKC,UACT,EAKAC,SAAU,CAMNC,YAAa,WACT,IAAIH,KAAKpB,OAAOwB,OAAQ,MAAO,GAC/B,IAAID,EAAcH,KAAKpB,OAAOwB,OAAOC,MAAM,MAAMC,KAAI,SAASC,GAC1D,OAAOA,EAAEC,QAAQ,KAAM,GAC3B,IACA,OAAGL,EAAYM,QAA6B,KAAnBN,EAAY,GAC1B,GAEJA,CACX,EAOAO,kBAAmB,WACf,GAAIV,KAAKpB,OAAO+B,cAChB,OAAOX,KAAKpB,OAAO+B,cAAcH,QAAQ,KAAM,IAAIH,MAAM,KAC7D,EAQAO,cAAe,CACXC,IAAK,WACD,OAAGb,KAAKpB,OAAOkC,WAA0CC,IAAlCf,KAAKpB,OAAOkC,KAAKE,aAC7BhB,KAAKpB,OAAOkC,KAAKE,aAAaC,MAElC,EACX,EACAC,IAAK,SAASC,GACPnB,KAAKpB,OAAOkC,UAC0BC,IAAlCf,KAAKpB,OAAOkC,KAAKE,aAChBhB,KAAKpB,OAAOkC,KAAKE,aAAaC,MAAQE,EAEtCnB,KAAKpB,OAAOkC,KAAKE,aAAe,CAC5BC,MAAOE,GAIfnB,KAAKpB,OAAOkC,KAAO,CACfE,aAAc,CACVC,MAAOE,GAIvB,IAORC,QAAS,CAKLnB,SAAQ,WACAD,KAAKpB,OAAOyC,WACZrB,KAAKpB,OAAOyC,SAAW,IAE3BrB,KAAKsB,aACLtB,KAAKuB,6BACLC,SAAWjD,EAAE,uBACbiD,SAASC,SAAS,QAClBlD,EAAEmD,QAAQC,GAAG,UAAU,WACNpD,EAAEqD,UAAUC,cAAgBtD,EAAEmD,QAAQG,eACrCtD,EAAEmD,QAAQI,YACpBN,SAASO,QAAQ,KAEe,SAA5BP,SAASQ,IAAI,YACbR,SAASS,OAAO,IAG5B,GACJ,EAKAC,kBAAmB,WACflC,KAAKnB,qBAAsB,EAC3BmB,KAAKlB,eAAgB,EACrBkB,KAAKjB,aAAc,EACnBiB,KAAKhB,cAAe,EACpBgB,KAAKf,cAAe,EACpBe,KAAKd,oBAAqB,CAC9B,EAIAoC,WAAY,WAER,IAAMa,EAAO5D,EAAE,SAAS6D,MACpBC,EAAW9D,EAAE,WAAD,OAAY4D,IAE5B5D,EAAE,iBAAiB+D,OAGfD,EAAS5B,QACT4B,EAASE,OAGb,IAAMC,EAAUxC,KAAKxB,SAASwB,KAAKpB,OAAOuD,WAE1BpB,IAAZyB,GAKJxC,KAAKyC,QAAQD,GACbxC,KAAK0C,oBAAoBF,GACzBxC,KAAK2C,YAAY3C,KAAKpB,OAAOuD,KAAMK,IAN/BxC,KAAKkC,mBAOb,EAKAO,QAAS,SAAUD,QAGiBzB,IAA5ByB,EAAQI,kBAA6D,IAA5BJ,EAAQI,gBACjD5C,KAAKnB,qBAAsB,GAE3BmB,KAAKnB,qBAAsB,EAC3BmB,KAAKpB,OAAO+B,cAAgB,KAIN,IAAtB6B,EAAQK,UACR7C,KAAKlB,eAAgB,GAErBkB,KAAKlB,eAAgB,EACrBkB,KAAKpB,OAAOwB,OAAS,KAID,IAApBoC,EAAQM,UAAyC,IAArBN,EAAQO,WACX,IAAzBP,EAAQQ,eAAgD,IAAvBR,EAAQS,WACzCjD,KAAKjB,aAAc,EAEnBiB,KAAKjB,aAAc,GAIC,IAApByD,EAAQM,QACR9C,KAAKV,iBAAkB,GAEvBU,KAAKV,iBAAkB,EACvBU,KAAKpB,OAAOsE,KAAO,KAGC,IAApBV,EAAQW,QACRnD,KAAKT,iBAAkB,GAEvBS,KAAKT,iBAAkB,EACvBS,KAAKpB,OAAOwE,KAAO,KAGM,IAAzBZ,EAAQQ,aACRhD,KAAKR,sBAAuB,GAE5BQ,KAAKR,sBAAuB,EAC5BQ,KAAKpB,OAAOyE,WAAa,KAIE,IAA3Bb,EAAQc,eACRtD,KAAKP,wBAAyB,GAE9BO,KAAKP,wBAAyB,EAC9BO,KAAKpB,OAAO2E,aAAe,KAIJ,IAAvBf,EAAQS,WACRjD,KAAKN,oBAAqB,GAE1BM,KAAKN,oBAAqB,EAC1BM,KAAKpB,OAAO4E,SAAU,IAII,IAA1BhB,EAAQiB,cACRzD,KAAKf,cAAe,GAEpBe,KAAKf,cAAe,EACpBe,KAAKpB,OAAO8E,MAAQ,GACpB1D,KAAKpB,OAAO+E,oBAAsB,KAIP,IAA3BnB,EAAQoB,eACR5D,KAAKd,oBAAqB,GAE1Bc,KAAKd,oBAAqB,EAC1Bc,KAAKpB,OAAOiF,YAAc,KAIA,IAA1BrB,EAAQsB,gBAA2D,IAAjCtB,EAAQuB,uBACT,IAAjCvB,EAAQuB,uBAA4D,IAA3BvB,EAAQwB,iBACrB,IAA5BxB,EAAQyB,kBAAgE,IAApCzB,EAAQ0B,0BACR,IAApC1B,EAAQ2B,0BAAiE,IAA7B3B,EAAQ4B,mBACpB,IAAhC5B,EAAQ6B,sBAA4D,IAA5B7B,EAAQ8B,gBAChDtE,KAAKhB,cAAe,EAEpBgB,KAAKhB,cAAe,CAE5B,EAQA2D,YAAa,SAAUR,EAAMK,GACzBxC,KAAKL,YAAwB,YAAI,EACjC4E,OAAOC,KAAKxE,KAAKxB,UAAUiG,SAAQ,SAAUC,GACzC1E,KAAKL,YAAY+E,IAAO,CAC5B,GAAG1E,MACCwC,EAAQmC,QACR3E,KAAKL,YAAYwC,IAAQ,EAEzBnC,KAAKL,YAAwB,YAAI,CAEzC,EAMAiF,uBAAwB,SAAUC,GAC9B,GAAK7E,KAAKpB,OAAOyC,SAAjB,CACA,IAAMyD,EAAQ9E,KAAKpB,OAAOyC,SAAS0D,QAAQF,IAC7B,IAAXC,GACC9E,KAAKpB,OAAOyC,SAAS2D,OAAOF,EAAO,EAHN,CAKrC,EAUApC,oBAAmB,SAACF,IAEc,IAA1BA,EAAQsB,cACRvF,EAAE,mBAAmB0G,SAAS1C,QAE9BhE,EAAE,mBAAmB0G,SAAS3C,OAC9BtC,KAAK4E,uBAAuB,WAIK,IAAjCpC,EAAQuB,qBACRxF,EAAE,2BAA2B0G,SAAS1C,QAEtChE,EAAE,2BAA2B0G,SAAS3C,OACtCtC,KAAK4E,uBAAuB,mBAID,IAA3BpC,EAAQwB,eACRzF,EAAE,oBAAoB0G,SAAS1C,QAE/BhE,EAAE,oBAAoB0G,SAAS3C,OAC/BtC,KAAK4E,uBAAuB,YAIA,IAA5BpC,EAAQyB,gBACR1F,EAAE,qBAAqB0G,SAAS1C,QAEhChE,EAAE,qBAAqB0G,SAAS3C,OAChCtC,KAAK4E,uBAAuB,aAIQ,IAApCpC,EAAQ0B,wBACR3F,EAAE,8BAA8B0G,SAAS1C,QAEzChE,EAAE,8BAA8B0G,SAAS3C,OACzCtC,KAAK4E,uBAAuB,sBAIQ,IAApCpC,EAAQ2B,wBACR5F,EAAE,8BAA8B0G,SAAS1C,QAEzChE,EAAE,8BAA8B0G,SAAS3C,OACzCtC,KAAK4E,uBAAuB,sBAIC,IAA7BpC,EAAQ4B,iBACR7F,EAAE,sBAAsB0G,SAAS1C,QAEjChE,EAAE,sBAAsB0G,SAAS3C,OACjCtC,KAAK4E,uBAAuB,cAII,IAAhCpC,EAAQ6B,oBACR9F,EAAE,2BAA2B0G,SAAS1C,QAEtChE,EAAE,2BAA2B0G,SAAS3C,OACtCtC,KAAK4E,uBAAuB,mBAIA,IAA5BpC,EAAQ8B,gBACR/F,EAAE,sBAAsB0G,SAAS1C,QAEjChE,EAAE,sBAAsB0G,SAAS3C,OACjCtC,KAAK4E,uBAAuB,YAEpC,EAKArD,2BAA0B,WACtBvB,KAAKkF,mBACLlF,KAAKmF,kBACLnF,KAAKoF,aACT,EAKAF,iBAAkB,WACc,OAAzBlF,KAAKpB,OAAOyC,eAA8CN,IAAzBf,KAAKpB,OAAOyC,WAC5CrB,KAAKpB,OAAOyC,SAASgE,SAAS,iBAC9BrF,KAAKb,yBAA0B,GAE/Ba,KAAKb,yBAA0B,EAC5Ba,KAAKpB,OAAOkC,WAA6CC,IAArCf,KAAKpB,OAAOkC,KAAKwE,kBACpCtF,KAAKpB,OAAOkC,KAAKwE,gBAAgBC,cAAgB,KAG7D,EAKAJ,gBAAiB,WACe,OAAzBnF,KAAKpB,OAAOyC,eAA8CN,IAAzBf,KAAKpB,OAAOyC,WAC5CrB,KAAKpB,OAAOyC,SAASgE,SAAS,kBAC9B9G,EAAE,uBAAuBgE,OACzBvC,KAAKZ,wBAAyB,IAE9BY,KAAKZ,wBAAyB,EAC3BY,KAAKpB,OAAOkC,WAA6CC,IAArCf,KAAKpB,OAAOkC,KAAKwE,kBACpCtF,KAAKpB,OAAOkC,KAAKwE,gBAAgBE,cAAgB,KAG7D,EAKAJ,YAAa,WACmB,OAAzBpF,KAAKpB,OAAOyC,eAA8CN,IAAzBf,KAAKpB,OAAOyC,WAC5CrB,KAAKpB,OAAOyC,SAASgE,SAAS,YAC9BrF,KAAKX,oBAAqB,GAE1BW,KAAKX,oBAAqB,EACvBW,KAAKpB,OAAOkC,WAA6CC,IAArCf,KAAKpB,OAAOkC,KAAKwE,kBACpCtF,KAAKpB,OAAOkC,KAAKwE,gBAAgBG,SAAW,KAGxD","sources":["webpack://bc-admin-third/./src/bc_custom_content/js/admin/custom_fields/form.js"],"sourcesContent":["/**\n * baserCMS :  Based Website Development Project <https://basercms.net>\n * Copyright (c) NPO baser foundation <https://baserfoundation.org/>\n *\n * @copyright     Copyright (c) NPO baser foundation\n * @link          https://basercms.net baserCMS Project\n * @since         5.0.0\n * @license       https://basercms.net/license/index.html MIT License\n */\n\n\nlet vm = new Vue({\n\n    /**\n     * Element\n     */\n    el: '#AdminCustomFieldsForm',\n\n    /**\n     * data\n     * @returns Object\n     */\n    data: function () {\n        const script = $('#AdminCustomFieldsFormScript');\n        return {\n            settings: JSON.parse(script.attr('data-setting')),\n            entity: JSON.parse(script.attr('data-entity')),\n            showRowDefaultValue: false,\n            showRowSource: false,\n            showRowText: false,\n            showRowCheck: false,\n            showRowRegex: false,\n            showRowPlaceholder: false,\n            showControlEmailConfirm: false,\n            showControlMaxFileSize: false,\n            showControlFileExt: false,\n            showControlSize: false,\n            showControlLine: false,\n            showControlMaxLength: false,\n            showControlAutoConvert: false,\n            showControlCounter: false,\n            showPreview: [],\n            sourceMultiCheckbox: [],\n            sourceRadio: [],\n            sourceSelect: [],\n        }\n    },\n\n    /**\n     * Mounted\n     */\n    mounted: function () {\n        this.initView();\n    },\n\n    /**\n     * Computed\n     */\n    computed: {\n        /**\n         * 配列の選択リストを取得\n         *\n         * @returns {{length}|*|*[]}\n         */\n        arraySource: function() {\n            if(!this.entity.source) return [];\n            let arraySource = this.entity.source.split(\"\\n\").map(function(v){\n                return v.replace('\\r', '');\n            });\n            if(arraySource.length && arraySource[0] === '') {\n                return [];\n            }\n            return arraySource;\n        },\n\n        /**\n         * 配列の初期値を取得\n         *\n         * @returns {string[]}\n         */\n        arrayDefaultValue: function() {\n            if(!this.entity.default_value) return;\n            return this.entity.default_value.replace('\\r', '').split(\"\\n\");\n        },\n\n        /**\n         * チェックボックスのラベルを取得\n         *\n         * @todo プラグインへの依存を解決する\n         * @returns {string|*}\n         */\n        checkboxLabel: {\n            get: function () {\n                if(this.entity.meta && this.entity.meta.BcCcCheckbox !== undefined) {\n                    return this.entity.meta.BcCcCheckbox.label;\n                }\n                return '';\n            },\n            set: function(value) {\n                if(this.entity.meta) {\n                    if(this.entity.meta.BcCcCheckbox !== undefined) {\n                        this.entity.meta.BcCcCheckbox.label = value;\n                    } else {\n                        this.entity.meta.BcCcCheckbox = {\n                            label: value\n                        }\n                    }\n                } else {\n                    this.entity.meta = {\n                        BcCcCheckbox: {\n                            label: value\n                        }\n                    };\n                }\n            }\n        }\n    },\n\n    /**\n     * Methods\n     */\n    methods: {\n\n        /**\n         * 表示を初期化する\n         */\n        initView() {\n            if(!this.entity.validate) {\n                this.entity.validate = [];\n            }\n            this.initByType();\n            this.initValidateOptionControls();\n            $preview = $(\"#CustomFieldPreview\");\n            $preview.appendTo('body');\n            $(window).on('scroll', function () {\n                var bottom = $(document).innerHeight() - $(window).innerHeight();\n                if (bottom <= $(window).scrollTop()) {\n                    $preview.fadeOut(500);\n                } else {\n                    if ($preview.css('display') === 'none') {\n                        $preview.fadeIn(500);\n                    }\n                }\n            });\n        },\n\n        /**\n         * 全てのオプション行を非表示にする\n         */\n        hideAllOptionsRow: function () {\n            this.showRowDefaultValue = false;\n            this.showRowSource = false;\n            this.showRowText = false;\n            this.showRowCheck = false;\n            this.showRowRegex = false;\n            this.showRowPlaceholder = false;\n        },\n        /**\n         * フィールドタイプによって表示を変更する\n         */\n        initByType: function () {\n\n            const type = $('#type').val();\n            let $rowType = $(`#RowMeta${type}`);\n\n            $('.bca-row-meta').hide();\n\n            // プラグインのメタフィールド\n            if ($rowType.length) {\n                $rowType.show();\n            }\n\n            const setting = this.settings[this.entity.type];\n\n            if (setting === undefined) {\n                this.hideAllOptionsRow();\n                return;\n            }\n\n            this.initRow(setting);\n            this.initValidateControl(setting);\n            this.initPreview(this.entity.type, setting);\n        },\n\n        /**\n         * 行の表示を初期化する\n         */\n        initRow: function (setting) {\n\n            // 初期値（デフォルト：表示）\n            if (setting.useDefaultValue === undefined || setting.useDefaultValue === true) {\n                this.showRowDefaultValue = true;\n            } else {\n                this.showRowDefaultValue = false;\n                this.entity.default_value = '';\n            }\n\n            // 選択リスト（デフォルト：非表示）\n            if (setting.useSource === true) {\n                this.showRowSource = true;\n            } else {\n                this.showRowSource = false;\n                this.entity.source = '';\n            }\n\n            // テキスト関連（デフォルト：非表示）\n            if (setting.useSize === true || setting.useLines === true ||\n                setting.useMaxLength === true || setting.useCounter === true) {\n                this.showRowText = true;\n            } else {\n                this.showRowText = false;\n            }\n\n            // サイズ（デフォルト：非表示）\n            if (setting.useSize === true) {\n                this.showControlSize = true;\n            } else {\n                this.showControlSize = false;\n                this.entity.size = '';\n            }\n            // ライン（デフォルト：非表示）\n            if (setting.useLine === true) {\n                this.showControlLine = true;\n            } else {\n                this.showControlLine = false;\n                this.entity.line = '';\n            }\n            // 最大値（デフォルト：非表示）\n            if (setting.useMaxLength === true) {\n                this.showControlMaxLength = true;\n            } else {\n                this.showControlMaxLength = false;\n                this.entity.max_length = '';\n            }\n\n            // 自動変換（デフォルト：非表示）\n            if (setting.useAutoConvert === true) {\n                this.showControlAutoConvert = true;\n            } else {\n                this.showControlAutoConvert = false;\n                this.entity.auto_convert = '';\n            }\n\n            // カウンター（デフォルト：非表示）\n            if (setting.useCounter === true) {\n                this.showControlCounter = true;\n            } else {\n                this.showControlCounter = false;\n                this.entity.counter = false;\n            }\n\n            // 正規表現（デフォルト：非表示）\n            if (setting.useCheckRegex === true) {\n                this.showRowRegex = true;\n            } else {\n                this.showRowRegex = false;\n                this.entity.regex = '';\n                this.entity.regex_error_message = '';\n            }\n\n            // プレースホルダー（デフォルト：非表示）\n            if (setting.usePlaceholder === true) {\n                this.showRowPlaceholder = true;\n            } else {\n                this.showRowPlaceholder = false;\n                this.entity.placeholder = '';\n            }\n\n            // 入力チェック（デフォルト：非表示）\n            if (setting.useCheckEmail === true || setting.useCheckEmailConfirm === true ||\n                setting.useCheckEmailConfirm === true || setting.useCheckNumber === true ||\n                setting.useCheckHankaku === true || setting.useCheckZenkakuKatakana === true ||\n                setting.useCheckZenkakuHiragana === true || setting.useCheckDatetime === true ||\n                setting.useCheckMaxFileSize === true || setting.useCheckFileExt === true) {\n                this.showRowCheck = true;\n            } else {\n                this.showRowCheck = false;\n            }\n        },\n\n        /**\n         * プレビューを初期化する\n         *\n         * @param type\n         * @param setting\n         */\n        initPreview: function (type, setting) {\n            this.showPreview['NonSupport'] = false;\n            Object.keys(this.settings).forEach(function (key) {\n                this.showPreview[key] = false;\n            }, this);\n            if (setting.preview) {\n                this.showPreview[type] = true;\n            } else {\n                this.showPreview['NonSupport'] = true;\n            }\n        },\n\n        /**\n         * 入力チェックフィールドの指定した値のチェックを外す\n         * @param target\n         */\n        uncheckValidateControl: function (target) {\n            if (!this.entity.validate) return;\n            const index = this.entity.validate.indexOf(target);\n            if(index !== -1) {\n                this.entity.validate.splice(index, 1);\n            }\n        },\n\n        /**\n         * 入力チェックフィールドを初期化する\n         *\n         * 複数チェックボックスの options をコントロールするにあたり、\n         * 時間的な問題でjQueryのままで一旦実装。\n         *\n         * @param setting\n         */\n        initValidateControl(setting) {\n            // Eメールチェック（デフォルト：非表示）\n            if (setting.useCheckEmail === true) {\n                $(\"#validate-email\").parent().show();\n            } else {\n                $(\"#validate-email\").parent().hide();\n                this.uncheckValidateControl('EMAIL');\n            }\n\n            // Eメール確認チェック（デフォルト：非表示）\n            if (setting.useCheckEmailConfirm === true) {\n                $(\"#validate-email_confirm\").parent().show();\n            } else {\n                $(\"#validate-email_confirm\").parent().hide();\n                this.uncheckValidateControl('EMAIL_CONFIRM');\n            }\n\n            // 数値チェック（デフォルト：非表示）\n            if (setting.useCheckNumber === true) {\n                $(\"#validate-number\").parent().show();\n            } else {\n                $(\"#validate-number\").parent().hide();\n                this.uncheckValidateControl('NUMBER');\n            }\n\n            // 半角英数チェック（デフォルト：非表示）\n            if (setting.useCheckHankaku === true) {\n                $(\"#validate-hankaku\").parent().show();\n            } else {\n                $(\"#validate-hankaku\").parent().hide();\n                this.uncheckValidateControl('HANKAKU');\n            }\n\n            // 全角カタカナチェック（デフォルト：非表示）\n            if (setting.useCheckZenkakuKatakana === true) {\n                $(\"#validate-zenkaku_katakana\").parent().show();\n            } else {\n                $(\"#validate-zenkaku_katakana\").parent().hide();\n                this.uncheckValidateControl('ZENKAKU_KATAKANA');\n            }\n\n            // 全角ひらがなチェック（デフォルト：非表示）\n            if (setting.useCheckZenkakuHiragana === true) {\n                $(\"#validate-zenkaku_hiragana\").parent().show();\n            } else {\n                $(\"#validate-zenkaku_hiragana\").parent().hide();\n                this.uncheckValidateControl('ZENKAKU_HIRAGANA');\n            }\n\n            // 日付チェック（デフォルト：非表示）\n            if (setting.useCheckDatetime === true) {\n                $(\"#validate-datetime\").parent().show();\n            } else {\n                $(\"#validate-datetime\").parent().hide();\n                this.uncheckValidateControl('DATETIME');\n            }\n\n            // ファイルアップロードサイズ制限（デフォルト：非表示）\n            if (setting.useCheckMaxFileSize === true) {\n                $(\"#validate-max_file_size\").parent().show();\n            } else {\n                $(\"#validate-max_file_size\").parent().hide();\n                this.uncheckValidateControl('MAX_FILE_SIZE');\n            }\n\n            // ファイル拡張子チェック（デフォルト：非表示）\n            if (setting.useCheckFileExt === true) {\n                $(\"#validate-file_ext\").parent().show();\n            } else {\n                $(\"#validate-file_ext\").parent().hide();\n                this.uncheckValidateControl('FILE_EXT');\n            }\n        },\n\n        /**\n         * 入力チェックのオプションのコントロールを初期化する\n         */\n        initValidateOptionControls() {\n            this.initEmailConfirm();\n            this.initMaxFileSize();\n            this.initFileExt();\n        },\n\n        /**\n         * Eメール比較先フィールド名の表示を切り替える\n         */\n        initEmailConfirm: function () {\n            if(this.entity.validate === null || this.entity.validate === undefined) return;\n            if (this.entity.validate.includes('EMAIL_CONFIRM')) {\n                this.showControlEmailConfirm = true;\n            } else {\n                this.showControlEmailConfirm = false;\n                if(this.entity.meta && this.entity.meta.BcCustomContent !== undefined) {\n                    this.entity.meta.BcCustomContent.email_confirm = '';\n                }\n            }\n        },\n\n        /**\n         * ファイルアップロードサイズ上限の表示を切り替える\n         */\n        initMaxFileSize: function () {\n            if(this.entity.validate === null || this.entity.validate === undefined) return;\n            if (this.entity.validate.includes('MAX_FILE_SIZE')) {\n                $('#ControlMaxFileSize').show();\n                this.showControlMaxFileSize = true;\n            } else {\n                this.showControlMaxFileSize = false;\n                if(this.entity.meta && this.entity.meta.BcCustomContent !== undefined) {\n                    this.entity.meta.BcCustomContent.max_file_size = '';\n                }\n            }\n        },\n\n        /**\n         * アップロードを許可する拡張子の表示を切り替える\n         */\n        initFileExt: function () {\n            if(this.entity.validate === null || this.entity.validate === undefined) return;\n            if (this.entity.validate.includes('FILE_EXT')) {\n                this.showControlFileExt = true;\n            } else {\n                this.showControlFileExt = false;\n                if(this.entity.meta && this.entity.meta.BcCustomContent !== undefined) {\n                    this.entity.meta.BcCustomContent.file_ext = '';\n                }\n            }\n        }\n    }\n});\n"],"names":["Vue","el","data","script","$","settings","JSON","parse","attr","entity","showRowDefaultValue","showRowSource","showRowText","showRowCheck","showRowRegex","showRowPlaceholder","showControlEmailConfirm","showControlMaxFileSize","showControlFileExt","showControlSize","showControlLine","showControlMaxLength","showControlAutoConvert","showControlCounter","showPreview","sourceMultiCheckbox","sourceRadio","sourceSelect","mounted","this","initView","computed","arraySource","source","split","map","v","replace","length","arrayDefaultValue","default_value","checkboxLabel","get","meta","undefined","BcCcCheckbox","label","set","value","methods","validate","initByType","initValidateOptionControls","$preview","appendTo","window","on","document","innerHeight","scrollTop","fadeOut","css","fadeIn","hideAllOptionsRow","type","val","$rowType","hide","show","setting","initRow","initValidateControl","initPreview","useDefaultValue","useSource","useSize","useLines","useMaxLength","useCounter","size","useLine","line","max_length","useAutoConvert","auto_convert","counter","useCheckRegex","regex","regex_error_message","usePlaceholder","placeholder","useCheckEmail","useCheckEmailConfirm","useCheckNumber","useCheckHankaku","useCheckZenkakuKatakana","useCheckZenkakuHiragana","useCheckDatetime","useCheckMaxFileSize","useCheckFileExt","Object","keys","forEach","key","preview","uncheckValidateControl","target","index","indexOf","splice","parent","initEmailConfirm","initMaxFileSize","initFileExt","includes","BcCustomContent","email_confirm","max_file_size","file_ext"],"sourceRoot":""}